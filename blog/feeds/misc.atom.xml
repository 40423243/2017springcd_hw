<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Spring 協同產品設計實習 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/misc.atom.xml" rel="self"></link><id>./</id><updated>2017-05-31T09:00:00+08:00</updated><entry><title>W15</title><link href="./w15.html" rel="alternate"></link><published>2017-05-31T09:00:00+08:00</published><updated>2017-05-31T09:00:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-05-31:./w15.html</id><summary type="html">&lt;p&gt;1:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 250
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "30px ScriptS"
ctx.fillText("40423243 ",340,300)
ctx.stroke()
&lt;/script&gt;

&lt;p&gt;2:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear2" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx+rp, midy, midx-rp, midy)
        # 畫出 rp 圓, 畫圓函式尚未定義
        # create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear2']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 250
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()
ctx.lineWidth = "600"
ctx.strokeStyle = "white"
ctx.moveTo(0,600)
ctx.lineTo(800,600)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "20px ScriptS"
ctx.fillText("40423243 ",340,320)
ctx.stroke()
&lt;/script&gt;</summary><category term="使用導引"></category></entry><entry><title>W14</title><link href="./w14.html" rel="alternate"></link><published>2017-05-24T09:00:00+08:00</published><updated>2017-05-24T09:00:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-05-24:./w14.html</id><summary type="html">&lt;section&gt;
拆主機
&lt;/section&gt;</summary><category term="使用導引"></category></entry><entry><title>W13</title><link href="./w13.html" rel="alternate"></link><published>2017-05-17T09:00:00+08:00</published><updated>2017-05-17T09:00:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-05-17:./w13.html</id><summary type="html">&lt;section&gt;
想要解決干涉問題就必須要考慮到模數和角度的配合(180/尺數)
如果齒輪不是在水平或垂直位置上就要再加上位置的角度
&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/217769922" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/217769922"&gt;2017-05-17_10-20-39&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W12</title><link href="./w12.html" rel="alternate"></link><published>2017-05-10T11:55:00+08:00</published><updated>2017-05-10T11:55:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-05-10:./w12.html</id><summary type="html">&lt;section&gt;
這周的齒輪嚙合在兩個齒輪內都沒有問題
三個齒輪以上就會產生干涉
&lt;/section&gt;</summary><category term="使用導引"></category></entry><entry><title>W11</title><link href="./w11.html" rel="alternate"></link><published>2017-05-03T10:55:00+08:00</published><updated>2017-05-03T10:55:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-05-03:./w11.html</id><summary type="html">&lt;section&gt;
前一周碰到一個問題是測試用的BLOG沒刪乾淨導致BLOG無法更新﹐且分支模板錯誤﹐
本來想說要用還原版次解決但是最後在git pull的時候又回到死胡同﹐ MD檔和HTML檔會一直跑回來﹐
就算是把舊版本拉出來再重新蓋回去也不行﹐
會顯示版本跟不上﹐
最後解決辦法是把BLOG創回來 導回MD檔 再重刪 就可以成功解決了!

今天看3個PDF
一.比較指令:版本管理
二.跟隨模式:遠端同步
三.匯入/導入DXF檔案:DXF和DWG檔案
四.捷徑工具列:捷徑工具列讓使用指令變的更方便
五.加入評論:線上討論作品的問題或細節處理
六.插入時的快照模式:更快建立組裝件
七.查驗插入零件:取代原有的零件,可以省去一開始要配對零件的時間
八.多重瀏覽器標籤:可以同步處理好幾個不同的零件或組裝程序,不用到處找檔案
九.捲動到此/捲動到尾端:特徵上點右鍵按Roll to here(捲動到此)的指令,系統就會把特徵清單尾端定在這裡,當修改完畢時就在特徵列上按Roll to end
十.導入檔案時按著Shift來點選檔案:按著Shift點第一個檔案再點最後一個檔案,全部的檔案都會被選取,就可以同時導入多個檔案

&lt;/section&gt;</summary><category term="使用導引"></category></entry><entry><title>W10</title><link href="./w10.html" rel="alternate"></link><published>2017-04-26T11:35:00+08:00</published><updated>2017-04-26T11:35:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-04-26:./w10.html</id><summary type="html">&lt;section&gt;
今天看到期中成果感覺很不錯
&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/214780628" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214780628"&gt;2017-04-26_11-03-53&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W9</title><link href="./w9.html" rel="alternate"></link><published>2017-04-19T09:00:00+08:00</published><updated>2017-04-19T09:00:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-04-19:./w9.html</id><summary type="html">&lt;section&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫四連桿 trace point 路徑--&gt;

&lt;canvas id="fourbar" width="600" height="600"&gt;&lt;/canvas&gt;

&lt;div id="container1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# 準備繪圖畫布
canvas = doc["fourbar"]
container1 = doc['container1']
ctx = canvas.getContext("2d")

fourbar_data = open("./../data/midterm8.csv").read()
fourbar_list = fourbar_data.splitlines()
#container1 &lt;= fourbar_list[0]
# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 利用 transform 將 y 座標反轉, 且 offset canvas.height
# (X scale, X skew, Y skew, Y scale, X offset, Y offset)
# 配合圖形位置進行座標轉換
ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100)
# 畫出 x 與 y 座標線
# 各座標值放大 4 倍
ratio = 4
ctx.moveTo(0, 0)
ctx.lineTo(-30*ratio, 0)
start_point = fourbar_list[0].split(",")
ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio)
count = 0
for data in fourbar_list[1:]:
    point = data.split(",")
    #count = count + 1
    #container1 &lt;= str(count) + ":" + point[0] + "," + point[1]
    #container1 &lt;= html.BR()
    ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/213773873" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/213773873"&gt;2017-04-19_08-53-16&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/213781332" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/213781332"&gt;2017-04-19_09-48-01&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W7</title><link href="./w7.html" rel="alternate"></link><published>2017-04-05T11:25:00+08:00</published><updated>2017-04-05T11:25:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-04-05:./w7.html</id><summary type="html">&lt;section&gt;
為了協同作業 輸入git rm -r liquid_tags指令 為了配合 軸跟孔要有距離才能轉動 不可以長太扁 不然會分辨不出來是柱狀

login 帳號 pw 密碼 cap 權限 fossil update fossil clone 網址 cdw7.fossil dir mkdir cdw7 cd wd mkdir cdw7 cd wd fossil open ./../../cdw7.fossil fossil add . fossil remote-url off fossil commit -m "commit message" fossil push https://user@192.168.1.36 key-in user password to complete push

&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/211611480" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/211611480"&gt;2017-04-05_10-42-45&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/212840986" width="640" height="336" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/212840986"&gt;2017-04-05_22-59-30&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W6</title><link href="./w6.html" rel="alternate"></link><published>2017-03-29T11:25:00+08:00</published><updated>2017-03-29T11:25:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-03-29:./w6.html</id><summary type="html">&lt;section&gt;
&lt;h1&gt;心得&lt;/h1&gt;
1. 全自動的 start.bat 與 stop.bat 設定

2. 使用者可以完全控制近端 (隨身碟或隨身硬碟) 上的 Fossil SCM Server 啟動, 並且登入進行 Wiki 與 Technote 的內容管理

3. 使用者可以在近端練習各種 Fossil SCM 的指令與連桿位置 tracking 驗證程式的開發

4. 使用者已經可以利用 Solvespace 與 OnShape 繪製 one-link, four-bar 與 Jansen's Linkage 機構, 並且將模型導入 V-rep

5. 使用者已經可以完成 V-rep 模擬平台上的 one-link velocity and position control

6. 使用者學習如何透過 loop closure 設定, 將 four-bar linkage 從 Solvespace 與 OnShape 轉入 V-rep 進行 Python Remote API 的 position and velocity 控制   關鍵字:v-rep loop closure

7. 使用者學習如何利用 OnShape 在瀏覽器中進行 one-link 與 four-bar linkage 的運動模擬, 轉出 public link 放到個人的簡報與網誌中.

8. 使用者必須完成以上各階段的操作流程說明與操作影片拍攝, 並透過簡報與網誌完成個人的期中專案報告.

9. 期中考後則陸續完成 Jansen's Linkage 的 OnShape 運動模擬與 V-rep 平台上的 Python Remote API position 與 velocity control simulation


畫零件的時候標註尺寸要用變數 這樣才不用一個尺寸一個尺寸改 

&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/210541380" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/210541380"&gt;2017-03-29_11-15-10&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W5</title><link href="./w5.html" rel="alternate"></link><published>2017-03-22T11:41:00+08:00</published><updated>2017-03-22T11:41:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-03-22:./w5.html</id><summary type="html">&lt;section&gt;
&lt;h1&gt;心得&lt;/h1&gt;
在協同作業中務必要將每個人的權限分配清楚 (如果不幸把自己權限弄掉可以用SQL救回來) 連結用[]包起來 |後面的就是顯示名稱 建立一個與project name同名的wiki就可以再進去的時候直接到wiki Fossil Wiki的連結形式[url|link note] Markdownlink note Vrep從左上過來依序是:1移動 2旋轉 3遠近 5定位 8移動物件 9選轉物件 不受重力影響: 把馬達拉到BASE下面 然後再把LINK拉進去
&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/209502622" width="640" height="348" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209502622"&gt;2017-03-22_11-35-51&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W4</title><link href="./w4.html" rel="alternate"></link><published>2017-03-15T11:24:00+08:00</published><updated>2017-03-15T11:24:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-03-15:./w4.html</id><summary type="html">&lt;p&gt;1&lt;/p&gt;

&lt;iframe src="../data/W4/1.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;2&lt;/p&gt;

&lt;iframe src="../data/W4/2.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;3&lt;/p&gt;

&lt;iframe src="../data/W4/3.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;p&gt;123&lt;/p&gt;

&lt;iframe src="../data/W4/123.html" width="800" height="480"&gt;&lt;/iframe&gt;

&lt;section&gt;
&lt;h1&gt;心得&lt;/h1&gt;
https://mde2a2.kmol.info 會有分組倉儲

三種遠端視窗連線協定:
1. x-windows - Windows 環境中使用 xming, 以 putty 連線後透過 SSH - X11 forwarding localhost:0 可以 xterm&amp;
2. vnc - http://www.tightvnc.com/
3. remote desktop - Windows 為內定, Ubuntu 使用 Remmina

分組:https://mde2a2.kmol.info/cdbg(組別)
然後每個組員都要加入 並且給予每個組員適當的權限

做一個單連桿機構
&lt;/section&gt;</summary><category term="使用導引"></category></entry><entry><title>W3</title><link href="./w3.html" rel="alternate"></link><published>2017-03-08T11:24:00+08:00</published><updated>2017-03-08T11:24:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-03-08:./w3.html</id><summary type="html">&lt;section&gt;
&lt;h1&gt;心得&lt;/h1&gt;
今天下雨還有來上課的同學們真是值得嘉許
https://mde2a1.kmol.info
加入:REM 取得電腦 IP, 然後設定 %Disk%:/stunnel/config/stunnel.conf
for /f "delims=[] tokens=2" %%a in ('ping -4 -n 1 %ComputerName% ^| findstr [') do set NetworkIP=%%a
REM echo Network IP: %NetworkIP%
REM Saved in %Disk%:\stunnel\config\stunnel.conf
@echo off
REM 建立 stunnel.conf
@echo [https] &gt; %Disk%:\stunnel\config\stunnel.conf
REM 附加資料
@echo accept = %NetworkIP%:443 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo connect = 127.0.0.1:8080 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo TIMEOUTclose = 0 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo cert = %Disk%:\stunnel\config\localhost.crt &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo key = %Disk%:\stunnel\config\localhost.key &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
REM 啟動 stunnel
可以每次開程式自動改ip
&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/207400881" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/207400881"&gt;2017-03-08_11-08-14&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/207400823" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/207400823"&gt;2017-03-08_10-43-48&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/207404538" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/207404538"&gt;2017-03-08_12-02-22&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W2</title><link href="./w2.html" rel="alternate"></link><published>2017-03-01T09:46:00+08:00</published><updated>2017-03-01T09:46:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-03-01:./w2.html</id><summary type="html">&lt;section&gt;
&lt;h1&gt;心得&lt;/h1&gt;
主機:https://IP/2017springvcp_hw
帳號:cadlab 密碼:2017springvcp_hw
建ethercalc
錯誤代號cp950解決辦法:utf-8   splitlines:切割
&lt;/section&gt;

&lt;h3&gt;分組座位原始碼&lt;/h3&gt;

&lt;pre class="brush: python"&gt;
#import os
adata = open("w2b_cadlab.txt", encoding="utf-8").read()
#讀取w2b_cadlab.txt 檔案,讓裡面的內容成為資料, 因為檔案裡有中文, 所以設定encoding 使用utf-8 的編驛碼
rdata = open("w2b_registered.txt", encoding="utf-8").read().splitlines()
#print(adata)
#用print 先檢查資料是否是我們需要的
alist = adata.splitlines()
#利用splitlines 的方法把資料隔開, 就可以得到一個特定的數列
#print(alist[2])
n = 0
row = 0
final_list = []
w2_list = []
for stud_num in alist[2:]:
#從第2列開始, 因為第0列和第1列都不是我們要的
    row = row + 1
    blist = stud_num.split("\t")
    #print(blist)
    column = 0
    #為了避免序號連續, 利用column = 0 將順序重製, 因為每一列算完之後要換下一列重新開始
    for i in range(len(blist)):
        column = column + 1
        if blist[i] != "":
            #print(blist[i])
            clist = blist[i].split("_")
            stud_data = clist[0]+"_"+clist[1]+"_"+str(row)+"_"+str(column)
            final_list.append(stud_data)
            w2_list.append(clist[1])
            n = n +1
# 根據數列前導字串排序, 目的在建立分組數列
group_list = sorted(final_list)
print("分組名單:")
for i in range(len(group_list)):
    print(group_list[i])
print("座位列表:")
for i in range(len(final_list)):
    print(final_list[i])
for i in range(len(rdata)):
    if rdata[i] not in w2_list:
        print("缺席學生:", rdata[i])
print("學生總數:", n)
#print(os.environ)
&lt;/pre&gt;

&lt;h1&gt;額外&lt;/h1&gt;

&lt;p&gt;和其他小組員討論得出:如果想要每次都自動開leo就要改路徑，但這樣Stunnel就會打不開，所以也要把Stunnel往上移
&lt;/section&gt;&lt;/p&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/206204967" width="640" height="349" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/206204967"&gt;2017-03-01 17-18-15&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry><entry><title>W1</title><link href="./w1.html" rel="alternate"></link><published>2017-02-26T18:20:00+08:00</published><updated>2017-02-26T18:20:00+08:00</updated><author><name>40423243</name></author><id>tag:,2017-02-26:./w1.html</id><summary type="html">&lt;section&gt;
&lt;h1&gt;心得&lt;/h1&gt;
Stunnel就是http的proxy 解決:tiny2017_700MB\data\stunnel\config\stunnel.conf拉出來 (有分號都是註記) 改ip(ipconfig /all)(443不改) proxy的例外加上自己的ip 去http://192.168.1.24/2017springvcp_hw 下載fourbar_eightbar_solvespace_vrep.7z和onelink_vrep_remoteapi_pos_vel.7z
&lt;/section&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/205751049" width="640" height="349" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/205751049"&gt;2017-02-26 18-04-47&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/205751032" width="640" height="349" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/205751032"&gt;2017-02-26 17-39-45&lt;/a&gt; from &lt;a href="https://vimeo.com/user45620934"&gt;40423243&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="使用導引"></category></entry></feed>